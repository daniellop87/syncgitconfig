#!/usr/bin/env bash
set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONF_PATH="${CONF_PATH:-/etc/syncgitconfig/syncgitconfig.yaml}"
# shellcheck source=/opt/syncgitconfig/lib/common.sh
. "$SCRIPT_DIR/../lib/common.sh"

print_header() {
  echo "== syncgitconfig status =="
  if [[ -f "$CONF_PATH" ]]; then
    echo "Config: $CONF_PATH"
  else
    echo "Config: (no existe)"
  fi
}

main() {
  print_header

  local load_ok=0
  if [[ -f "$CONF_PATH" ]]; then
    if load_config_yaml "$CONF_PATH"; then
      load_ok=1
    else
      warn "No se pudo cargar el YAML de configuración"
    fi
  fi

  local repo="$CFG_repo_path"
  local remote_display="$(redact_remote_url "$CFG_remote_url")"
  local env="$CFG_env"
  local host="$CFG_host"
  local cooldown="$CFG_cooldown_seconds"

  echo "Repo:   ${repo:-}"
  echo "Remote: ${remote_display:-}"
  echo "Env:    ${env:-}"
  echo "Host:   ${host:-}"
  echo "Cooldown: ${cooldown:-}"

  local staging="/var/lib/syncgitconfig/staging/${host:-unknown}"
  echo "Staging: $staging"

  if (( load_ok )); then
    echo "Apps:   ${#APP_NAMES[@]}"
  else
    echo "Apps:   (desconocido)"
  fi

  echo -e "\n-- Últimas 10 líneas del log --"
  local LOGFILE="/var/log/syncgitconfig/syncgitconfig.log"
  if [[ -f "$LOGFILE" ]]; then
    tail -n 10 "$LOGFILE"
  else
    echo "(sin log)"
  fi

  echo -e "\n-- Estado Git --"
  if [[ -n "$repo" && -d "$repo/.git" ]]; then
    run_git -C "$repo" status -s || true
  else
    echo "Repo no inicializado."
  fi

  local watcher_state
  watcher_state="$(systemctl is-active syncgitconfig-watch.service 2>/dev/null || echo unknown)"
  echo -e "\nWatcher: $watcher_state"
}

main "$@"
