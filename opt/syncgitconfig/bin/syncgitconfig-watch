#!/usr/bin/env bash
set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONF_PATH="${CONF_PATH:-/etc/syncgitconfig/syncgitconfig.yaml}"
# shellcheck source=/opt/syncgitconfig/lib/common.sh
. "$SCRIPT_DIR/../lib/common.sh"

main() {
  [[ -f "$CONF_PATH" ]] || { err "No existe $CONF_PATH"; exit 1; }

  load_config_yaml "$CONF_PATH" || exit 1

  local repo_path="$CFG_repo_path"
  local cooldown="$CFG_cooldown_seconds"

  local -a candidates=()
  if (( ${#WATCH_PATHS[@]} )); then
    candidates=("${WATCH_PATHS[@]}")
  fi
  if (( ${#candidates[@]} == 0 )); then
    warn "watch_paths vacío en YAML; usando fallback /etc/systemd"
    candidates=("/etc/systemd")
  fi

  local -a watch_list=()
  for path in "${candidates[@]}"; do
    [[ -z "$path" ]] && continue
    if [[ -e "$path" ]]; then
      watch_list+=("$path")
    else
      warn "Ruta en watch_paths no existe: $path"
    fi
  done

  if (( ${#watch_list[@]} == 0 )); then
    warn "Ninguna ruta de watch_paths es válida; usando fallback /etc/systemd"
    watch_list=("/etc/systemd")
  fi

  if [[ ! -d "$repo_path/.git" ]]; then
    err "repo_path no es un checkout Git válido: $repo_path"
  fi

  log "Watcher inicializado (cooldown ${cooldown}s)"
  log "Rutas vigiladas:"
  for path in "${watch_list[@]}"; do
    log "  - $path"
  done

  local last_run=0

  while true; do
    if ! inotifywait -q -e modify,create,delete,move "${watch_list[@]}" >/dev/null 2>&1; then
      sleep 1
      continue
    fi

    local now_sec
    now_sec="$(date +%s)"
    if (( now_sec - last_run < cooldown )); then
      log "[WARN] Dentro de cooldown (${cooldown}s); evento ignorado."
      continue
    fi
    last_run=$now_sec

    for script in /opt/syncgitconfig/bin/app-sync-*; do
      [[ -x "$script" ]] || continue
      log "[INFO] Ejecutando $(basename "$script")"
      "$script" || {
        local rc=$?
        log "[WARN] $(basename "$script") devolvió código $rc"
      }
    done

    if [[ -d "$repo_path/.git" ]]; then
      if ! git -C "$repo_path" diff --quiet || ! git -C "$repo_path" diff --cached --quiet; then
        git -C "$repo_path" add -A
        git -C "$repo_path" -c user.name="Infra Backup Bot" -c user.email="infra-backup@${CFG_host}" commit -m "syncgitconfig: auto-commit $(date -Iseconds)"
        if git -C "$repo_path" push; then
          log "[OK] Cambios empujados."
        else
          log "[WARN] Push falló; intentando pull --ff-only y reintento."
          if git -C "$repo_path" pull --ff-only && git -C "$repo_path" push; then
            log "[OK] Resuelto tras pull."
          else
            log "[ERR] No se pudo resolver el push."
          fi
        fi
      else
        log "[INFO] Evento recibido pero sin cambios pendientes en Git."
      fi
    fi
  done
}

main "$@"
